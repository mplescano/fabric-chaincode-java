/*
 * Copyright IBM Corp. 2017 All Rights Reserved.
 *
 * SPDX-License-Identifier: Apache-2.0
 */
apply plugin: 'com.google.protobuf'
apply plugin: 'de.undercouch.download'
apply plugin: 'maven-publish'

repositories {
    maven { url "https://plugins.gradle.org/m2/" }
    jcenter()
    mavenCentral()
}

// Fabric branch to download proto files from
def fabricBranch = 'release-1.1'
// Fabric Github repository link
def fabricRepo = 'https://raw.githubusercontent.com/hyperledger/fabric'
def protosDir = 'src/main/protos'
// List of files to download
def protoFiles = ['protos/common/common.proto'                     : "$protosDir/common/common.proto",
                  'protos/ledger/queryresult/kv_query_result.proto': "$protosDir/ledger/queryresult/kv_query_result.proto",
                  'protos/peer/chaincode.proto'                    : "$protosDir/peer/chaincode.proto",
                  'protos/peer/chaincode_event.proto'              : "$protosDir/peer/chaincode_event.proto",
                  'protos/peer/chaincode_shim.proto'               : "$protosDir/peer/chaincode_shim.proto",
                  'protos/peer/proposal.proto'                     : "$protosDir/peer/proposal.proto",
                  'protos/peer/proposal_response.proto'            : "$protosDir/peer/proposal_response.proto"]

buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.5'
        classpath 'de.undercouch:gradle-download-task:3.4.2'
    }
}

dependencies {
    compile 'com.google.protobuf:protobuf-java:3.5.1'
    compile 'com.google.protobuf:protobuf-java-util:3.5.1'
    compile 'io.grpc:grpc-netty:1.9.0'
    compile 'io.grpc:grpc-protobuf:1.9.0'
    compile 'io.grpc:grpc-stub:1.9.0'
}

protobuf {
    protoc {
        // download the protobuf compiler
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }
    plugins {
        // define grpc plugin for the protobuf compiler
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.9.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            // apply the grpc plugin for the protobuf compiler
            grpc {}
        }
    }

    generatedFilesBaseDir = "$projectDir/src"
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', 'src/main/grpc']
        }
        proto {
            srcDirs 'src/main/protos'
        }
    }
}

task downloadProtoFiles << {
    protoFiles.each { k, v ->
        download {
            src "$fabricRepo/$fabricBranch/$k"
            dest v
            onlyIfModified true
        }
    }
}

publishing {
    publications {
        protosJar(MavenPublication) {
            groupId = project.group
            artifactId = project.name
            version = project.version

            from components.java
        }
    }
}

project.tasks.withType(Javadoc).all {
    enabled = false
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier 'sources'
	from sourceSets.main.allSource
}

artifacts {
	archives sourcesJar
}